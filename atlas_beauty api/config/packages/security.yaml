security:
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: "auto"
  role_hierarchy:
      ROLE_ADMIN:   [ROLE_ASSISTANT, ROLE_USER]
      ROLE_ASSISTANT: [ROLE_USER]


  providers:
    chain_provider:
      chain:
        providers: [app_patient_provider, app_user_provider]
    app_patient_provider:
      entity:
        class: App\Entity\Patient
        property: email
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email
    # used to reload user from session & other features (e.g. switch_user)

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    login:
      pattern: ^/api/login_check
      stateless: true
      provider: chain_provider
      json_login:
        check_path: /api/login_check
        username_path: email
        password_path: password
        success_handler: App\Security\AuthenticationSuccessHandler
        # success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure

    api:
      pattern: ^/api
      stateless: true
      provider: chain_provider
      jwt: ~

    admin:
      pattern: ^/admin
      stateless: true
      provider: chain_provider 
      jwt: ~
      logout:
        path: /admin/logout  

    main:
      lazy: true
      provider: chain_provider
      logout:
        path: api/logout
        invalidate_session: false
      stateless: true
      # jwt:
      #     cookie_extractors:
      #         - App\Security\JwtCookieExtractor

  access_control:
    - { path: ^/api/login, roles: PUBLIC_ACCESS }
    - { path: ^/api/login_check, roles: PUBLIC_ACCESS }
    - { path: ^/admin, roles: ROLE_ADMIN }
    - {
        path: ^/api/patients/\d+,
        methods: [GET],
        roles: IS_AUTHENTICATED_FULLY,
      }
    - {
        path: ^/api/patients/\d+,
        methods: [PUT, DELETE],
        roles: IS_AUTHENTICATED_FULLY,
      }
    - { path: ^/api/register, roles: PUBLIC_ACCESS }
    - { path: ^/api/patients, methods: [GET], roles: ROLE_ADMIN }
    - { path: ^/api/me, roles: PUBLIC_ACCESS }

    - { path: ^/docs, roles: PUBLIC_ACCESS }
    - { path: ^/api/mercure-token, roles: IS_AUTHENTICATED_FULLY }

    - { path: ^/admin, roles: ROLE_ADMIN }

    - { path: ^/api/patients, roles: IS_AUTHENTICATED_FULLY, methods: [PATCH] }
when@test:
  security:
    password_hashers:
      # By default, password hashers are resource intensive and take time. This is
      # important to generate secure password hashes. In tests however, secure hashes
      # are not important, waste resources and increase test times. The following
      # reduces the work factor to the lowest possible values.
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: auto
        cost: 4 # Lowest possible value for bcrypt
        time_cost: 3 # Lowest possible value for argon
        memory_cost: 10 # Lowest possible value for argon
